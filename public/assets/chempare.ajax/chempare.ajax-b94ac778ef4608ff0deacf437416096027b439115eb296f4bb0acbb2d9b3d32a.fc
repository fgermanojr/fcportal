      GLOBAL ALL
      PROBLEM CHEMPARE                                                   !^synop
        DIMENSION TM(6),CM(6),AM(6),CFITS(6),AFITS(6)

        !~ Measurement Data 
        DATA TM/10,20,30,40,50,60/  ! Time points for measurements
        DATA CM/0.419,0.563,0.629,0.666,0.689,0.708/ ! C measurements
        DATA AM/0.483,0.281,0.191,0.134,0.097,0.065/ ! A measurements

        !~ Initial conditions of the ODEs
        DATA NM,A0,B0,C0,D0,DT/6,1.0,1.03,0.0,0.0,2.0/ 
        DATA B1,B2/0.015,0.015/            ! Optimization step bounds
        P1=0.01 : P2=0.05                  !~ Parameter starting guesses

        !~ MetaCalculus: Initialize the ODE Solution 
        INITIATE ATHENA; FOR REACTION;
     &    EQUATIONS DADT/A,DBDT/B,DCDT/C,DDDT/D;  
     &    OF T; STEP DT; TO TF

        !~ MetaCalculus: Start the Optimizer 
        FIND P1,P2; IN CURFIT;
     &    BY AJAX(SET); TO MATCH CFITS,AFITS
      END

      CONTROLLER SET(AJAX) !~ FIND control parameters for the HERA Solver 
        DETAIL=1    !~ Detailed iteration report for every iteration
        DETOUT=0    !~ Send iteration reports to DETAIL stream
        SUMOUT=1    !~ Send iteration summary to SUMMARY stream
        DAMP=0
      END

      
      MODEL CURFIT       !~ Simulation Model of Chemical Kinetic Curves 
        CHARFUN FCSINT*2
        CHARACTER*2 NI
        DATA IT/0/ : NI=FCSINT(IT)
        @AXES('ITER'//NI,'ITERATION '//NI)
        A=A0 : B=B0 : C=C0 : D=D0 : T=0 : TF=0
        ERROR=0 : I=1
        DO WHILE (I.LE.NM)
          TF=TF+DT 

          !~ MetaCalculus: Generate Kinetic Curves 
          INTEGRATE REACTION; BY ATHENA
          @CURVES('ITER'//NI)                         !~ Plot the curves 
          IF(TF.EQ.TM(I)) THEN
            !~ Compute error between curves and measured data 
            AFITS(I)=AM(I)-A
            CFITS(I)=CM(I)-C
            @MEASURED('ITER'//NI,AM(I),CM(I),TM(I)) !~ Plot measurement
            I=I+1
          ENDIF
        END DO
        !~ Show graph for this iteration  
        @SHOW('ITER'//NI,'Chemical profile of iteration'//NI)  
        IT=IT+1
      END
 
      MODEL REACTION !~ Rates of reaction differential equations
        DCDT=P1*A*B
        DADT=-(DCDT+(.01+P2)*A
        DBDT=-(DCDT+.05*B*D)
        DDDT=DBDT-DADT
      END

      PROCEDURE AXES(GNAME,TITLE)                                        !^axes
       CHARACTER*(*) GNAME,TITLE
       @GRAFIL(GNAME,'SUM','IMAGE',0,0) !~ Create SUMMARY-stream graph
       @FONT(GNAME,'COMPLEX','STANDARD',0,10) !~ Character size & color   
       @AXNAME(GNAME,'X','TIME (MINUTES)','CENT',30,36,10)  
       @AXNAME(GNAME,'Y','CONCENTRATION','CENT',30,36,10)   
       @XYPLOT(GNAME,'RECT',0.0,60.0,0.0,10.0,0,1.0,0.0,0.1,1.0,0,0,0,0)
       @SETUP(GNAME,'AM',LN_NONE,CL_RED,SY_BOX,0) 
       @SETUP(GNAME,'CM',LN_NONE,CL_MAGENTA,SY_DELTA,0) 
       @SETUP(GNAME,'A ',LN_SOL,CL_RED,SY_NONE,1) 
       @SETUP(GNAME,'C ',LN_DASH,CL_MAGENTA,SY_NONE,1) 
       @SETUP(GNAME,'B ',LN_CHNDSH,CL_GREEN,SY_NONE,1) 
       @SETUP(GNAME,'D ',LN_CHNDOT,CL_ORANGE,SY_NONE,1) 
       !~ Chart Title (FORE) 
       @HEAD(GNAME,'CHEMICAL PARAMETERS ESTIMATION',50,50,10) 
       @HEAD(GNAME,TITLE,50,100,10)
       @MESSAGE(GNAME,'P1= ',20.0,.9,CL_BLUE) 
       @NUMBER(GNAME,P1,4,999.,999.,10,0,CL_RED)
       @MESSAGE(GNAME,'P2= ',20.0,.85,CL_BLUE)
       @NUMBER(GNAME,P2,4,999.,999.,10,0,CL_RED) 
      END

      MODEL CURVES(GNAME)  !~ Generate points on integral curves
        CHARACTER*(*) GNAME
        @CURVE(GNAME,'A ',T,A)
        @CURVE(GNAME,'C ',T,C)
        @CURVE(GNAME,'B ',T,B)
        @CURVE(GNAME,'D ',T,D)
      END

      MODEL MEASURED(GNAME,AP,CP,TP) !~ Generate measured points
        CHARACTER*(*) GNAME
        @POINT(GNAME,'AM',TP,AP)
        @POINT(GNAME,'CM',TP,CP)
      END
